name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand({ ping: 1 })' | mongo localhost:27017/test --quiet"
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Instalar mongosh (MongoDB Shell)
      - name: Install MongoDB Shell (mongosh)
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://downloads.mongodb.com/compass/mongosh-1.9.0-linux-x86_64.tgz
          tar -xvzf mongosh-1.9.0-linux-x86_64.tgz
          sudo mv mongosh-1.9.0-linux-x86_64/mongosh /usr/local/bin/

      - name: Verify MongoDB connection
        run: |
          sleep 10
          echo 'db.runCommand({ ping: 1 })' | mongosh localhost:27017/test --quiet

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=pau-regalado_TFG-backend
